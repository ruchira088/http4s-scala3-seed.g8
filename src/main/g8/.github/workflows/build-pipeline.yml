name: $name;format="normalize"$ pipeline

on:
  push:
    branches:
      - "**"

concurrency:
  group: \${{ github.ref }}
  cancel-in-progress: true

jobs:
  compile-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: \${{ runner.os }}-\${{ hashFiles('**/build.properties') }}-\${{ hashFiles('**/plugins.sbt') }}-\${{ hashFiles('**/Dependencies.scala') }}
          path: |
            ~/.sbt
            ~/.cache/coursier
          restore-keys: |
            \${{ runner.os }}-\${{ hashFiles('**/build.properties') }}-\${{ hashFiles('**/plugins.sbt') }}
            \${{ runner.os }}-\${{ hashFiles('**/build.properties') }}
            \${{ runner.os }}

      - name: Fetch compile dependencies
        run: sbt update

      - name: Compile
        run: sbt compile

      - name: Fetch test dependencies
        run: sbt "Test / update"

      - name: Execute test suite
        run: sbt test

      - name: Send failure Slack message
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: C02HYP398KS
          slack-message: |
            :x: *FAILURE*
            *Job:* compile-and-test
            *\${{ github.repository }}*
            *Branch:* \${{ github.ref }}
            *Commit:* `\${{ github.sha }}`
            *Last Commit Message:* \${{ github.event.head_commit.message }}
            *URL:* \${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: \${{ secrets.SLACK_BOT_TOKEN }}

  publish-docker-image:
    runs-on: ubuntu-latest
    needs:
      - compile-and-test

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: \${{ runner.os }}-\${{ hashFiles('**/build.properties') }}-\${{ hashFiles('**/plugins.sbt') }}-\${{ hashFiles('**/Dependencies.scala') }}
          path: |
            ~/.sbt
            ~/.cache/coursier
          restore-keys: |
            \${{ runner.os }}-\${{ hashFiles('**/build.properties') }}-\${{ hashFiles('**/plugins.sbt') }}
            \${{ runner.os }}-\${{ hashFiles('**/build.properties') }}
            \${{ runner.os }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-session-name: backend-publish
          role-to-assume: "arn:aws:iam::365562660444:role/github_iam_role"

      - name: Build and publish Docker image
        run: ansible-playbook playbooks/build-and-publish-docker-image.yml

      - name: Send failure Slack message
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: C02HYP398KS
          slack-message: |
            :x: *FAILURE*
            *Job:* build-and-publish-docker-image
            *\${{ github.repository }}*
            *Branch:* \${{ github.ref }}
            *Commit:* `\${{ github.sha }}`
            *Last Commit Message:* \${{ github.event.head_commit.message }}
            *URL:* \${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: \${{ secrets.SLACK_BOT_TOKEN }}

  deploy-to-k8s:
    runs-on: ubuntu-latest
    needs:
      - publish-docker-image

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-session-name: backend-publish
          role-to-assume: "arn:aws:iam::365562660444:role/github_iam_role"

      - name: Deploy to K8s server
        run: ansible-playbook playbooks/k8s-deploy.yml

      - name: Send failure Slack message
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: C02HYP398KS
          slack-message: |
            :x: *FAILURE*
            *\${{ github.repository }}*
            *Job:* deploy-to-k8s
            *Branch:* \${{ github.ref }}
            *Commit:* `\${{ github.sha }}`
            *Last Commit Message:* \${{ github.event.head_commit.message }}
            *URL:* \${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: \${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send successful Slack message
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: C02HYP398KS
          slack-message: |
            :white_check_mark: *SUCCESS*
            *\${{ github.repository }}*
            *Branch:* \${{ github.ref }}
            *Commit:* `\${{ github.sha }}`
            *Last Commit Message:* \${{ github.event.head_commit.message }}
            *URL:* \${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: \${{ secrets.SLACK_BOT_TOKEN }}