name: http4s scala3 seed pipeline

on:
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  compile-and-test:
    name: Compile & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Set up sbt
        uses: sbt/setup-sbt@v1

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: http4s-seed-${{ runner.os }}-${{ hashFiles('**/build.properties') }}-${{ hashFiles('**/plugins.sbt') }}-${{ hashFiles('**/Dependencies.scala') }}
          path: |
            ~/.sbt
            ~/.cache/coursier
          restore-keys: |
            http4s-seed-${{ runner.os }}-${{ hashFiles('**/build.properties') }}-${{ hashFiles('**/plugins.sbt') }}
            http4s-seed-${{ runner.os }}-${{ hashFiles('**/build.properties') }}
            http4s-seed-${{ runner.os }}

      - name: Create new sbt project from g8 template
        run: sbt g8

      - name: Execute test suite
        run: cd target/g8 && sbt clean test


  publish-docker-image:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs:
      - compile-and-test

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Set up sbt
        uses: sbt/setup-sbt@v1

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: http4s-seed-${{ runner.os }}-${{ hashFiles('**/build.properties') }}-${{ hashFiles('**/plugins.sbt') }}-${{ hashFiles('**/Dependencies.scala') }}
          path: |
            ~/.sbt
            ~/.cache/coursier
          restore-keys: |
            http4s-seed-${{ runner.os }}-${{ hashFiles('**/build.properties') }}-${{ hashFiles('**/plugins.sbt') }}
            http4s-seed-${{ runner.os }}-${{ hashFiles('**/build.properties') }}
            http4s-seed-${{ runner.os }}

      - name: Create new sbt project from g8 template
        run: sbt g8

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-session-name: backend-deploy
          role-to-assume: "arn:aws:iam::365562660444:role/github_iam_role"

      - name: Build and publish Docker image
        run: ansible-playbook target/g8/playbooks/build-and-publish-docker-image.yml


  deploy-to-k8s:
    name: Deploy to K8s
    runs-on: ubuntu-latest
    needs:
      - publish-docker-image

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Set up sbt
        uses: sbt/setup-sbt@v1

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('**/build.properties') }}-${{ hashFiles('**/plugins.sbt') }}-${{ hashFiles('**/Dependencies.scala') }}
          path: |
            ~/.sbt
            ~/.cache/coursier
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/build.properties') }}-${{ hashFiles('**/plugins.sbt') }}
            ${{ runner.os }}-${{ hashFiles('**/build.properties') }}
            ${{ runner.os }}

      - name: Create new sbt project from g8 template
        run: sbt g8

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-session-name: backend-deploy
          role-to-assume: "arn:aws:iam::365562660444:role/github_iam_role"

      - name: Deploy to K8s server
        run: ansible-playbook target/g8/playbooks/k8s-deploy.yml


  send-notification:
    runs-on: ubuntu-latest
    if: always()

    permissions:
      id-token: write

    needs:
      - compile-and-test
      - publish-docker-image
      - deploy-to-k8s

    steps:
      - name: Send Slack notification
        uses: ruchira088/slack-github-action@v1
