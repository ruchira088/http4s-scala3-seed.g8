---
- hosts: localhost
  connection: local

  tasks:
    - name: Install dependencies
      import_tasks: tasks/install-dependencies.yml

    - name: Gather git information
      import_tasks: tasks/git-info.yml

    - set_fact:
        namespace: "{{ '$name;format="normalize"$' if git_branch == 'main' or git_branch == 'master' else '$name;format="normalize"$-' + git_branch }}"

    - name: Render K8s resource files
      import_tasks: tasks/k8s-resource-files.yml
      vars:
        domain: $name;format="normalize"$.dev.ruchij.com
        hostname: "{{ domain if git_branch == 'main' or git_branch == 'master' else git_branch + '.' + domain }}"
        ghcr_credentials: "{{ lookup('aws_ssm', '/github/ghcr/docker-config', region='ap-southeast-2') }}"

    - name: Set kube_config
      import_tasks: tasks/k8s-config.yml

    - name: Deploy K8s resources
      block:
        - name: Create Namespace
          command: kubectl apply -f k8s-output/Namespace.yaml --kubeconfig {{ kubeconfig }}

        - name: Create Docker registry secret
          command: kubectl apply -f k8s-output/DockerRegistryCredentials.yaml --kubeconfig {{ kubeconfig }}

        - name: Create data ConfigMap
          command: kubectl apply -f k8s-output/DataConfigMap.yaml --kubeconfig {{ kubeconfig }}

        - name: Create file ConfigMap
          command: kubectl apply -f k8s-output/FileConfigMap.yaml --kubeconfig {{ kubeconfig }}

        - name: Create Secrets
          command: kubectl apply -f k8s-output/Secrets.yaml --kubeconfig {{ kubeconfig }}

        - name: Deploy application
          command: kubectl apply -f k8s-output --kubeconfig {{ kubeconfig }}

        - name: Wait for successful deployment
          command: kubectl rollout status deployment $name;format="normalize"$-deployment --kubeconfig {{ kubeconfig }} -n {{ namespace }}

    - name: Clean up output directory
      file:
        path: k8s-output
        state: absent
