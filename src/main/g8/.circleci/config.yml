version: 2.1

aliases:
  - &install-sbt
    name: Install sbt
    command: |
      echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list && \
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 && \
      sudo apt update && \
      sudo apt install sbt -y

  - &install-ansible
    name: Install Ansible
    command: |
      sudo apt update && \
      sudo apt install software-properties-common python3-pip -y

      pip3 install ansible boto3 botocore

  - &install-kubectl
    name: Install kubectl
    command: |
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - && \
      echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list && \
      sudo apt update && \
      sudo apt install -y kubectl

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run: *install-sbt
      - checkout
      - restore_cache: &dependency-cache-keys
          key:
            - sbt-cache-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}
            - sbt-cache
      - run:
          name: Fetch compile dependencies
          command: sbt update
      - run:
          name: Compile
          command: sbt compile
      - run:
          name: Fetch test dependencies
          command: sbt test:update
      - run:
          name: Run unit tests
          command: sbt test
      - save_cache:
          key: sbt-cache-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}
          paths:
            - ~/.sbt
            - ~/.cache/coursier

  build-and-publish-docker-image:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - setup_remote_docker
      - run: *install-sbt
      - run: *install-ansible
      - checkout
      - restore_cache: *dependency-cache-keys
      - run:
          name: Build and publish Docker image
          command: ansible-playbook playbooks/build-and-publish-docker-image.yml

  deploy-to-k8s:
    docker:
      - image: cimg/base:stable
    steps:
      - run: *install-ansible
      - run: *install-kubectl
      - checkout
      - run:
          name: Deploy application to K8s
          command: ansible-playbook playbooks/k8s-deploy.yml

orbs:
  slack: circleci/slack@3

workflows:
  version: 2

  $name;format="normalize"$:
    jobs:
      - build-and-test:
        post-steps:
          - slack/status

      - build-and-publish-docker-image:
          context: aws-credentials
          requires:
            - build-and-test
          post-steps:
            - slack/status

      - deploy-to-k8s:
          context: aws-credentials
          requires:
            - build-and-publish-docker-image
          post-steps:
            - slack/status
